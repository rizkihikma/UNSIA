import imageio.v3 as imageio
import numpy as np
import matplotlib.pyplot as plt
from scipy.ndimage import convolve
from google.colab import files

def upload_image():
    uploaded = files.upload()
    filename = list(uploaded.keys())[0]
    return filename

def roberts_operator(image):
    Gx = np.array([[1, 0], [0, -1]])
    Gy = np.array([[0, 1], [-1, 0]])
    
    edge_x = convolve(image, Gx)
    edge_y = convolve(image, Gy)
    
    edge_magnitude = np.sqrt(edge_x**2 + edge_y**2)
    return edge_magnitude

def sobel_operator(image):
    Gx = np.array([[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]])
    Gy = np.array([[-1, -2, -1], [0, 0, 0], [1, 2, 1]])
    
    edge_x = convolve(image, Gx)
    edge_y = convolve(image, Gy)
    
    edge_magnitude = np.sqrt(edge_x**2 + edge_y**2)
    return edge_magnitude

def main():
    filename = upload_image()
    image = imageio.imread(filename, mode='F')
    
    edges_roberts = roberts_operator(image)
    edges_sobel = sobel_operator(image)
    
    plt.figure(figsize=(12, 6))
    
    plt.subplot(1, 3, 1)
    plt.imshow(image, cmap='gray')
    plt.title('Original Image')
    plt.axis('off')
    
    plt.subplot(1, 3, 2)
    plt.imshow(edges_roberts, cmap='gray')
    plt.title('Roberts Edge Detection')
    plt.axis('off')
    
    plt.subplot(1, 3, 3)
    plt.imshow(edges_sobel, cmap='gray')
    plt.title('Sobel Edge Detection')
    plt.axis('off')
    
    plt.show()
    
if __name__ == "__main__":
    main()
